angular.module("autoService",["ngRoute","ui.bootstrap"]).config(["$routeProvider","$locationProvider",function(e,t){e.when("/",{templateUrl:"services/services.view.html",controller:"servicesCtrl",controllerAs:"vm"}).when("/services",{templateUrl:"services/services.view.html",controller:"servicesCtrl",controllerAs:"vm"}).when("/inventory",{templateUrl:"inventory/inventory.view.html",controller:"inventoryCtrl",controllerAs:"vm"}).when("/inventory/form",{templateUrl:"inventoryForm/inventoryForm.view.html",controller:"inventoryFormCtrl",controllerAs:"vm"}).when("/login",{templateUrl:"auth/login/login.view.html",controller:"loginCtrl",controllerAs:"vm"}).when("/registration",{templateUrl:"/auth/registration/registration.view.html",controller:"registrationCtrl",controllerAs:"vm"}).otherwise({redirectTo:"/"}),t.html5Mode(!0),t.hashPrefix("")}]),function(){function e(n){return{services:function(){return n.get("/api/services")},serviceDelete:function(e){return n.delete("/api/services/"+e)},addNew:function(e){return n.post("/api/services",e)},update:function(e,t){return console.log("test"),n.put("/api/services/"+e,t)}}}e.$inject=["$http"],angular.module("autoService").service("serviceData",e)}(),function(){function e(n,t){var o=this;o.title="Services",o.msg="Searching sevices...",o.deleteService=function(e,t){n.serviceDelete(e).then(function(e){o.data.services.splice(t,1)},function(e){o.msg="Delete failed.",console.log(e.e)})},o.serviceFormModal=function(e){t.open({templateUrl:"/serviceForm/serviceForm.view.html",controller:"serviceFormCtrl",controllerAs:"vm",resolve:{serviceDetails:function(){return e}}}).result.then(function(e){void 0!==e&&(e.update||o.data.services.push(e.data))},function(e){})},n.services().then(function(e){o.msg=0<e.data.length?"":"No services.",o.data={services:e.data}},function(e){o.msg="Error while fetching services.",console.log(e.e)})}e.$inject=["serviceData","$uibModal"],angular.module("autoService").controller("servicesCtrl",e)}(),function(){function e(e,t,n){var o=this;o.title="Services",o.msg="Searching sevices...",o.data=void 0===n?{firstName:"",lastName:"",email:"",phoneNumber:"",time:"",type:""}:n,o.modalnoOkno={preklici:function(){t.close()}},o.saveData=function(){console.log(o.data),void 0===o.data._id?e.addNew(o.data).then(function(e){console.log(e),t.close({data:e.data,update:!1})},function(e){o.msg="Delete failed.",console.log(e.e)}):e.update(o.data._id,o.data).then(function(e){console.log(e),t.close({data:e.data,update:!0})},function(e){o.msg="Delete failed.",console.log(e.e)})}}e.$inject=["serviceData","$uibModalInstance","serviceDetails"],angular.module("autoService").controller("serviceFormCtrl",e)}(),function(){function e(n){var o=this;o.title="Inventory",o.msg="Searching inventory data...",o.deleteInventory=function(e,t){n.inventoryDelete(e).then(function(e){o.data.inventory.splice(t,1)},function(e){o.msg="Failed to delete",console.log(e.e)})},n.inventory().then(function(e){console.log(e),o.msg=0<e.data.length?"":"No data in inventory.",o.data={inventory:e.data}},function(e){o.msg="An error occured when fetching data from inventory.",console.log(e.e)})}e.$inject=["inventoryData"],angular.module("autoService").controller("inventoryCtrl",e)}(),function(){function e(t){return{inventory:function(){return t.get("/api/inventory")},inventoryDelete:function(e){return t.delete("api/inventory/"+e)},addNew:function(e){return t.post("api/inventory/",e)}}}e.$inject=["$http"],angular.module("autoService").service("inventoryData",e)}(),function(){function e(e){var t=this;t.title="Inventory",t.msg="Searching inventory...",t.data={name:"",description:"",quantity:""},t.saveData=function(){e.addNew(t.data).then(function(e){console.log(e)},function(e){t.msg="Delete failed.",console.log(e.e)})}}e.$inject=["inventoryData"],angular.module("autoService").controller("inventoryFormCtrl",e)}(),function(){function e(n,t){var o=function(e){n.localStorage["autoService-token"]=e},r=function(){return n.localStorage["autoService-token"]},i=function(){var e=r();return!!e&&JSON.parse(n.atob(e.split(".")[1])).validityDate>Date.now()/1e3};return{storeToken:o,returnToken:r,registration:function(e){return t.post("/api/register",e).then(function(e){o(e.data.token)})},login:function(e){return t.post("/api/login",e).then(function(e){o(e.data.token)})},logout:function(){n.localStorage.removeItem("autoService-token")},logedin:i,currUser:function(){if(i()){var e=r(),t=JSON.parse(n.atob(e.split(".")[1]));return{mail:t.mail,name:t.name}}}}}e.$inject=["$window","$http"],angular.module("autoService").service("authentication",e)}(),function(){function e(t,e){var n=this;n.registerData={name:"",mail:"",pass:""},n.firstToDisplay=t.search().page||"/",n.sendContent=function(){if(n.error="",!(n.registerData.name&&n.registerData.mail&&n.registerData.pass))return!(n.error="Enter all the data!");n.register()},n.register=function(){n.error="",e.registration(n.registerData).then(function(e){t.search("login",null),t.path(n.firstToDisplay)},function(e){n.error=e.data})}}e.$inject=["$location","authentication"],angular.module("autoService").controller("registrationCtrl",e)}(),function(){function e(e){var t=this;t.loginData={mail:"",pass:""},t.error="",t.sendContent=function(){if(t.error="",!t.loginData.mail||!t.loginData.pass)return!(t.error="All data required.");t.login()},t.login=function(){t.error="",console.log(t.loginData),e.login(t.loginData).then(function(e){console.log("dela",e)},function(e){t.error=e.data})}}e.$inject=["authentication"],angular.module("autoService").controller("loginCtrl",e)}(),angular.module("autoService").directive("naviga",function(){return{restrict:"EA",templateUrl:"/all/directives/nav/nav.template.html"}});